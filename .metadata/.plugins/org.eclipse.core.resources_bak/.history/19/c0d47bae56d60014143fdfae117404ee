package com.Game.net;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Random;

public class Ball extends GameObject{
	//private int timer = 0;
	private Random r;
	private Handler handler;
	public Ball(int x, int y, ID id, Handler handler) {
		super(x, y, id);
		this.handler = handler;
		r = new Random();
		velX = (r.nextInt(10 - -10)+ -10);
		velY = -5;
	}

	public void tick() {
		collision();
		if(x+32 >= Game.WIDTH){velX *= -1;}
		if(x <= 0){velX *= -1;}
		if(y <= 0){velY *= -1;}
		x += velX;
		y += velY;
	}

	public void render(Graphics g) {
		g.setColor(new Color(236, 105, 164));
		g.fillOval(x, y, 32, 32);
		//g.setColor(Color.black);
		//for(int i = 0; i < 3; i++)
		//	g.draw3DRect(x+i, y+i, 32-i*2, 32-i*2, true);
	}
	
	private void collision(){
		for(int i = 0; i < handler.object.size(); i++){
			GameObject tempObject = handler.object.get(i);
			if(tempObject.getID() == ID.Block){
				if(tempObject.getBoundsRight().intersects(getBoundsLeft())){
					velX *= -1;
					handler.object.remove(tempObject);
				}
				else if(tempObject.getBoundsLeft().intersects(getBoundsRight())){
					velX *= -1;
					handler.object.remove(tempObject);
				}
				else if(tempObject.getBoundsBottom().intersects(getBoundsTop())){
					velY *= -1;
					handler.object.remove(tempObject);
				}
				else if(tempObject.getBoundsTop().intersects(getBoundsBottom())){
					velY *= -1;
					handler.object.remove(tempObject);
				}
			}
			
			if(tempObject.getID() == ID.Player){
				if(tempObject.getBoundsRight().intersects(getBoundsLeft())){
					velX *= -1;
				}
				else if(tempObject.getBoundsLeft().intersects(getBoundsRight())){
					velX *= -1;
				}
				else if(tempObject.getBoundsBottom().intersects(getBoundsTop())){
					velY *= -1;
				}
				else if(tempObject.getBoundsTop().intersects(getBoundsBottom())){
					velY *= -1;
				}
			}
		}
	}
	

	public Rectangle getBoundsLeft() {
		return new Rectangle(x,y+3,3,26);
	}

	public Rectangle getBoundsRight() {
		return new Rectangle(x+29,y+3,3,26);
	}

	public Rectangle getBoundsTop() {
		return new Rectangle(x+3,y,26,3);
	}

	public Rectangle getBoundsBottom() {
		return new Rectangle(x+3,y+29,26,3);
	}

}
